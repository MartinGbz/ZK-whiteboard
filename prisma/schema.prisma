generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id            Int        @id @default(autoincrement())
  authorVaultId String
  text          String
  positionX     Float
  positionY     Float
  order         Int        @default(autoincrement())
  color         String
  whiteboard    Whiteboard @relation(fields: [whiteboardId], references: [id])
  whiteboardId  Int
  createdAt     DateTime   @default(now()) // Date de création de la 
  updatedAt     DateTime   @default(now()) @updatedAt // Date de mise à jour de la réaction
}

model Whiteboard {
  id            Int       @id @default(autoincrement())
  name          String
  description   String
  groupIds      String[]
  appId         String?
  author        User      @relation(fields: [authorVaultId], references: [vaultId])
  authorVaultId String
  messages      Message[]
  curated       Boolean
  createdAt     DateTime  @default(now()) // Date de création de la réaction
  updatedAt     DateTime  @default(now()) @updatedAt // Date de mise à jour de la réaction
}

model User {
  vaultId            String       @id
  createdWhiteboards Whiteboard[]
}

model Reaction {
  id        Int      @id @default(autoincrement())
  type      String // Type de la réaction (par exemple, "okHand", "thumbsUp", "purpleHeart")
  messageId Int // Clé étrangère faisant référence à l'ID du message associé
  userId    String // Identifiant de l'utilisateur qui a ajouté la réaction
  createdAt DateTime @default(now()) // Date de création de la 
  updatedAt DateTime @default(now()) @updatedAt // Date de mise à jour de la réaction

  @@unique([messageId, userId]) // Assure l'unicité d'une réaction par message, utilisateur et type
}
